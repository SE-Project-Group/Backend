<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/data/mongo 
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

	<context:property-placeholder location="classpath:redis.properties" />  

  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxActive" value="${redis.maxActive}" />  
        <property name="maxWait" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>
      
     <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}"   p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>      

	<!-- Bean -->
	<bean id="SpringContextUtil" class="util.SpringContextUtil" scope="singleton"></bean>
	
	<bean id="redisUtil" class="util.RedisUtil">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
		<context:property-placeholder location="classpath:mysql.properties" />  
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://127.0.0.1:3306/track" p:user="root"
		p:password="123456" p:maxPoolSize="40" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="20" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="mappingResources">
			<list>
				<value>model/Manager.hbm.xml</value>
				<value>model/Client.hbm.xml</value>
				<value>model/Follow.hbm.xml</value>
				<value>model/BestFeed.hbm.xml</value>
				<value>model/ClientExtraInfo.hbm.xml</value>		
			</list>
		</property>
		<!-- Hibernate SessionFactory -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- DAO Bean -->
	<bean id="clientDao" class="dao.impl.ClientDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="managerDao" class="dao.impl.ManagerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="followDao" class="dao.impl.FollowDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="tokenDao" class="dao.impl.TokenDaoImpl">
		<property name="redisUtil" ref="redisUtil" />
	</bean>
   	<bean id="feedRepository" class="dao.impl.FeedRepositoryImpl">
		<property name="mongoTemplate" ref="mongoTemplate" />
  	</bean>
  	<bean id="bestFeedDao" class="dao.impl.BestFeedDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
 	</bean>

	<!-- Service -->
	 <bean id="jpushService" class="service.impl.JPushServiceImpl">
		<property name="followDao" ref="followDao"></property>
	</bean>	
	
	 <bean id="clientService" class="service.impl.ClientServiceImpl">
		<property name="clientDao" ref="clientDao"></property>
		<property name="tokenDao" ref="tokenDao"></property>
	</bean>	
	
	 <bean id="feedService" class="service.impl.FeedServiceImpl">
		<property name="clientDao" ref="clientDao"></property>
		<property name="followDao" ref="followDao"></property>
		<property name="feedRepository" ref="feedRepository"></property>
	</bean>	
	
	 <bean id="followService" class="service.impl.FollowServiceImpl">
		<property name="clientDao" ref="clientDao"></property>
		<property name="followDao" ref="followDao"></property>
		<property name="feedRepository" ref="feedRepository"></property>
	</bean>	
	
	 <bean id="webService" class="service.impl.WebServiceImpl">
		<property name="managerDao" ref="managerDao"></property>
		<property name="feedRepository" ref="feedRepository"></property>
		<property name="bestFeedDao" ref="bestFeedDao"></property>
		
	</bean>	
	<!-- HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- appService Bean -->
		<aop:pointcut id="beanPointcut" expression="bean(appService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="beanPointcut" />
	</aop:config>
	
	
	<!-- MongoDB -->
	<!-- 加载配置文件 
	<context:property-placeholder location="classpath:mongo.properties" />
	-->
	
    <mongo:mongo host="localhost" port="27017" id="mongo">
    </mongo:mongo>
    
    
    <!--连接池工厂配置-->
    <mongo:db-factory dbname="test" mongo-ref="mongo"/> 
    <!-- mongo模板操作对象 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>   
    </bean>

</beans>